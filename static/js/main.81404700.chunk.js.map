{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","todosWithUsers","userId","usersFromServer","find","App","useState","setTodos","selectedUserId","setSelectedUserId","setTitle","isError","setIsError","handleChange","event","target","value","currentIsError","action","method","onSubmit","preventDefault","trim","newTodo","Math","max","Number","currentTodos","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81404700.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nexport const todosWithUsers: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: usersFromServer.find((user: User) => user.id === todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [title, setTitle] = useState('');\n  const [isError, setIsError] = useState({\n    userId: false,\n    title: false,\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsError((currentIsError) => ({\n      ...currentIsError,\n      userId: selectedUserId === '',\n      title: title.trim() === '',\n    }));\n\n    if (selectedUserId && title.trim()) {\n      const newTodo: Todo = {\n        id: Math.max(...todosWithUsers.map((todo) => todo.id)) + 1,\n        userId: Number(selectedUserId),\n        title,\n        completed: false,\n        user: usersFromServer.find(\n          (user: User) => user.id === Number(selectedUserId),\n        ),\n      };\n\n      setTodos((currentTodos) => [...currentTodos, newTodo]);\n      setTitle('');\n      setSelectedUserId('');\n    }\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    if (event.target.name === 'title') {\n      setTitle(event.target.value);\n      setIsError((currentIsError) => ({\n        ...currentIsError,\n        title: false,\n      }));\n    } else {\n      setSelectedUserId(event.target.value);\n      setIsError((currentIsError) => ({\n        ...currentIsError,\n        userId: false,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChange}\n          />\n\n          {isError.title && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            name=\"user id\"\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleChange}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isError.userId && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}